(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{460:function(s,t,r){"use strict";r.r(t);var a=r(53),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h3",{attrs:{id:"代理模式-跨域-未完"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代理模式-跨域-未完"}},[s._v("#")]),s._v(" 代理模式(跨域)(未完)")]),s._v(" "),r("h4",{attrs:{id:"jsonp跨域-利用script标签的src属性访问接口-src只能发送get请求-服务器端返回一段js代码-页面请求到便会执行代码。实现异步请求可以动态的创建script标签并传入回调函数-后端收到之后返回这个函数调用字符串并把返回的数据通过参数传入实现异步。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsonp跨域-利用script标签的src属性访问接口-src只能发送get请求-服务器端返回一段js代码-页面请求到便会执行代码。实现异步请求可以动态的创建script标签并传入回调函数-后端收到之后返回这个函数调用字符串并把返回的数据通过参数传入实现异步。"}},[s._v("#")]),s._v(" jsonp跨域:利用script标签的src属性访问接口(src只能发送get请求),服务器端返回一段js代码，页面请求到便会执行代码。实现异步请求可以动态的创建script标签并传入回调函数，后端收到之后返回这个函数调用字符串并把返回的数据通过参数传入实现异步。")]),s._v(" "),r("h4",{attrs:{id:"还有一种类似jsonp跨域的方式实现post跨域请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#还有一种类似jsonp跨域的方式实现post跨域请求"}},[s._v("#")]),s._v(" 还有一种类似jsonp跨域的方式实现post跨域请求，")]),s._v(" "),r("p",[r("valine",{attrs:{id:"/js/proxy.html"}})],1)])}),[],!1,null,null,null);t.default=e.exports}}]);